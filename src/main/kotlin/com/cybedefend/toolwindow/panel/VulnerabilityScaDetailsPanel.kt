// Fichier : src/main/kotlin/com/cybedefend/toolwindow/panel/VulnerabilityScaDetailsPanel.kt
package com.cybedefend.toolwindow.panel

import VulnerabilitySca
import com.intellij.ide.BrowserUtil
import com.intellij.ui.HyperlinkLabel
import com.intellij.ui.TitledSeparator
import com.intellij.ui.components.JBLabel
import com.intellij.ui.components.JBScrollPane
import com.intellij.util.ui.FormBuilder
import com.intellij.util.ui.JBUI
import java.awt.BorderLayout
import java.awt.Font
import javax.swing.JPanel

class VulnerabilityScaDetailsPanel : JPanel(BorderLayout()) {
    init {
        border = JBUI.Borders.empty(16)
    }

    fun showDetails(sca: VulnerabilitySca) {
        this.removeAll()
        val base = sca.base!!
        val metadata = sca.metadata!!
        val library = sca.library!!
        val fb = FormBuilder.createFormBuilder()
        val severityInfo = severityMap[base.currentSeverity.uppercase()] ?: severityMap["UNKNOWN"]!!
        val titlePanel = JPanel(BorderLayout(JBUI.scale(8), 0)).apply {
            add(JBLabel(LetterCircleIcon(severityInfo.letter, severityInfo.color, 20)), BorderLayout.WEST)
            add(JBLabel(metadata.summary).apply {
                font = font.deriveFont(Font.BOLD, 22f)
            }, BorderLayout.CENTER)
        }
        fb.addComponent(titlePanel)
        fb.addVerticalGap(8)
        fb.addComponent(TitledSeparator("Package Information"))
        fb.addLabeledComponent("Package:", JBLabel(library.packageName))
        fb.addLabeledComponent("Version:", JBLabel(library.packageVersion))
        fb.addLabeledComponent("Ecosystem:", JBLabel(library.ecosystem))
        fb.addLabeledComponent("File:", JBLabel(library.fileName))
        fb.addVerticalGap(12)
        fb.addComponent(TitledSeparator("Vulnerability Details"))
        fb.addComponent(createMarkdownPane(metadata.details ?: "No details available."))
        fb.addVerticalGap(12)
        metadata.references.takeIf { it.isNotEmpty() }?.let {
            fb.addComponent(TitledSeparator("References"))
            it.forEach { ref ->
                val hyperlinkLabel = HyperlinkLabel("â€¢ ${ref.url}")
                hyperlinkLabel.addHyperlinkListener { BrowserUtil.browse(ref.url) }
                fb.addComponent(hyperlinkLabel)
            }
        }

        val formPanel = fb.panel.apply {
            isOpaque = false
        }
        val scrollableWrapper = ScrollablePanel(BorderLayout()).apply {
            add(formPanel, BorderLayout.CENTER)
        }
        this.add(JBScrollPane(scrollableWrapper), BorderLayout.CENTER)
        this.revalidate()
        this.repaint()
    }
}